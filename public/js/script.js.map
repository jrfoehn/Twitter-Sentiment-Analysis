{"version":3,"sources":["script.js"],"names":[],"mappingsfile":"script.js","sourcesContent":["/**\n * Created by jrfoehn on 10/28/16.\n */\n$(document).ready(function(){\n\n  var rootURL = \"http://www.hashtag.dev/api/twitter/\";\n\n  var G_DATAGRAPH;\n  var G_cy;\n  var LATITUDE;\n  var LONGITUDE;\n\n  $('#nbTweets').slider({\n    formatter: function(value) {\n      return 'Current value: ' + value;\n    }\n  });\n\n  $('#streaming').bootstrapSwitch({\n    size: 'mini'\n  });\n\n  $('#nearby').bootstrapSwitch({\n    size: 'mini'\n  });\n\n  $('#radius').prop('disabled', true);\n\n  $('#nearby').on('switchChange.bootstrapSwitch', function (e, state) {\n    if (state) {\n      if(\"geolocation\" in navigator) {\n        $('#radius').prop('disabled', false);\n        navigator.geolocation.getCurrentPosition(function(position) {\n          LATITUDE = position['coords']['latitude'];\n          LONGITUDE = position['coords']['longitude'];\n        });\n      }else {\n        alert(\" Your browser doesn't support geolocation\");\n      }\n    }else{\n      $('#radius').prop('disabled', true);\n      LATITUDE = null;\n      LONGITUDE = null;\n    };\n  });\n\n  $('#btnLogout').on('click', function(){\n    var r = confirm(\"Are you sure you want to log out?\");\n    if (r === true) {\n      window.location.href=\"login.php\";\n    };\n  });\n\n  $('#btnSearch').on('click', function(){\n    $(\"#filterContainer\").empty();\n    searchHashtag();\n    return false;\n  });\n\n  $('#btnFilter').on('click', function(){\n    var minWeight = $('#nbWeight').val();\n    $.ajax({\n      type:'POST',\n      url: rootURL + 'filter',\n      data:{\n        'media': $('#media').val()\n      },\n      dataType: 'json',\n      success: function(data){\n        buildHashtagList(data);\n        G_DATAGRAPH = data;\n        buildGraph(filterEdges(G_DATAGRAPH, minWeight));\n      }\n    });\n  })\n\n  $('#btnexport').on('click', function(){\n    exportFile();\n  });\n\n  $('#btnUpload').on('click', function(){\n    var fileSelect = $('#file-select');\n    var uploadButton = $('#btnUpload');\n\n    // Fetch selected files and drop them into FormData object for upload\n    var files = fileSelect[0].files;\n    var formData = new FormData();\n    for (var i = 0; i < files.length; i++) {\n      var file = files[i];\n      formData.append('file[]', file, file.name);\n    }\n\n    // UI changes\n    uploadButton.html('Uploading...');\n    uploadButton.prop('disabled', true);\n    fileSelect.prop('disabled', true);\n\n    // Upload to server\n    $.ajax({\n      type:'POST',\n      url: rootURL + 'import',\n      dataType: 'json',\n      data: formData,\n      //Options to tell jQuery not to process data or worry about content-type.\n      cache: false,\n      contentType: false,\n      processData: false,\n      success: function(data){\n        G_DATAGRAPH = data;\n        buildGraph(data);\n        buildHashtagList(data);\n\n        // UI changes back\n        uploadButton.html('Import');\n        uploadButton.prop('disabled', false);\n        fileSelect.prop('disabled', false);\n        // Reset file input\n        fileSelect.wrap('<form>').closest('form').get(0).reset();\n        fileSelect.unwrap();\n        // Fade out modal\n        $('#modalImport').modal('hide');\n      }\n    });\n  });\n\n//Button for sorting\n  $('#btnSortLabel').on('click', function() {\n    buttonSortAction('alpha', $(this));\n  });\n  $('#btnSortWeight').on('click', function() {\n    buttonSortAction('weight', $(this));\n  });\n\n//Enter to submit\n  $('#hashtag').on('keydown', function(e){\n    if(e.keyCode == 13){\n      searchHashtag();\n    }\n  });\n  $('#nbWeight').on('keydown', function(e){\n    if(e.keyCode == 13){\n      var minWeight = $(this).val();\n      buildGraph(filterEdges(G_DATAGRAPH, minWeight));\n    }\n  });\n\n//search for a hashtag\n  function searchHashtag(){\n    $('#hashtag').prop('readonly', true);\n    $('#btnSearch').prop('disabled', true).html(\"Loading\");\n    if (LONGITUDE&&LATITUDE) {\n      var geocode = LATITUDE.toString() + \",\" + LONGITUDE.toString() + \",\" + $('#radius').val();\n    } else{\n      var geocode = \"\";\n    };\n    $.ajax({\n      type:'POST',\n      url: rootURL + 'search',\n      dataType: 'json',\n      data: {\n        'hashtag': $('#hashtag').val(),\n        'cnt': $('#nbTweets').val(),\n        'streaming': $('#streaming').prop('checked'),\n        'result_type': $('#result_type').val(),\n        'until': $('#until').val(),\n        'lang': $('#language').val(),\n        'geocode': geocode\n      },\n      success: function(data){\n        buildGraph(data);\n        buildHashtagList(data);\n        G_DATAGRAPH = data;\n        $('#hashtag').prop('readonly', false);\n        $('#btnSearch').prop('disabled', false).html(\"SEARCH\");\n      }\n    });\n  }\n\n  function exportFile(){\n    $.ajax({\n      type: 'GET',\n      url: rootURL + 'export',\n      success: function(data) {\n        //download automatical\n        $('body').append('<iframe width=\"1\" height=\"1\" frameborder=\"0\" src=\"' + data + '\"></iframe>');\n        //$('body').append('<iframe width=\"1\" height=\"1\" frameborder=\"0\" src=\"' + G_cy.png() + '\"></iframe>');\n        $('#graph-export').attr('src', G_cy.png());\n      }\n    });\n  }\n\n//Filter edges\n  function filterEdges(graph, minWeight) {\n    var newGraph = jQuery.extend(true, {}, graph);\n\n    newGraph.edges = newGraph.edges.filter(function(edge){\n      if (edge.data.weight < minWeight) {\n        var source = newGraph.nodes.filter(function(node){\n          return node.data.id === edge.data.source;\n        })[0];\n        var target = newGraph.nodes.filter(function(node){\n          return node.data.id === edge.data.target;\n        })[0];\n        source.data.weight -= edge.data.weight;\n        target.data.weight -= edge.data.weight;\n        return false;\n      } else {\n        return true;\n      }\n    });\n\n    newGraph.nodes = newGraph.nodes.filter(function(node){\n      return node.data.weight > 0;\n    });\n\n    return newGraph;\n  }\n\n  function buildGraph(graph) {\n    G_cy = cytoscape({\n      container: $('#cy')[0],\n\n      style: cytoscape.stylesheet()\n          .selector('node')\n          .css({\n            'content': 'data(label)',\n            'text-valign': 'center',\n            'color': 'white',\n            'text-outline-width': 2,\n            'text-outline-color': '#30c9bc',\n            'height': 50,\n            'width': 50,\n            'background-color': '#30c9bc'\n          })\n          .selector('edge')\n          .css({\n            'content': 'data(weight)',\n            'width': 4,\n            //'line-color': '#61bffc'\n            'curve-style': 'haystack',\n            'haystack-radius': 0,\n            'opacity': 0.8,\n            'line-color': '#a8eae5'\n\n          })\n          .selector(':selected')\n          .css({\n            'background-color': '#006666',\n            'line-color': '#006666',\n            'target-arrow-color': '#006666',\n            'source-arrow-color': '#006666',\n            'text-outline-color': '#006666'\n          }),\n\n      elements: graph,\n\n      layout: {\n        name: 'concentric'\n      }\n    });\n\n    G_cy.on('click', 'edge', function(e){\n      var tweet_contents = '';\n      var tweets = e.cyTarget.data('tweets');\n\n      for (var i = 0; i < tweets.length; i++) {\n        tweet_contents += '<li>' + tweets[i] + '</li>';\n      }\n\n      // show popover with tweets referenced to clicked edge\n      // set title by the relation of 2 hashtags\n      $('.popover .popover-title .popover-title-text').html(\n          e.cyTarget.data('source') + ' - ' + e.cyTarget.data('target')\n      );\n      // set content by the linked tweets of the relation\n      $('.popover .popover-content').html(tweet_contents);\n      // show popover at the position of click\n      $('.popover')\n          .css('left', e.cyRenderedPosition.x)\n          .css('top', e.cyRenderedPosition.y - 15)\n          .show();\n\n      // dismiss popover when clicking on 'x'\n      $('.popover .popover-title .close').on('click', function() {\n        $('.popover').hide();\n      });\n    });\n\n    //display filter container\n    $('#filterContainer').show();\n    $('#btnexport').show();\n  }\n\n  function buildHashtagList(graph) {\n    var nodesCpy = graph.nodes.slice();\n    // Default sorted by descending weight\n    nodesCpy = sortHashtags('weight', 1, nodesCpy);\n    displayHashtagList(nodesCpy);\n  }\n\n  function displayHashtagList(hashtagList) {\n    var hashtags = '';\n    hashtagList.forEach(function(e) {\n      var id = e.data.id;\n      var title = '#' + id;\n      var weight = e.data.weight;\n      hashtags += '<li id=\"h_' + id + '\" class=\"list-group-item\">' +\n          '<span class=\"badge\">' + weight + '</span>' +\n          title +\n          '</li>';\n    });\n    $('#hashtag-list').html(hashtags);\n  }\n\n// criterion in ['alpha', 'weight']:\n//   'alpha' for sorting by alphabet\n//   'weight' for sorting by weight\n// order in [0, 1]:\n//   0 for ascending order\n//   1 for descending\n  function sortHashtags(criterion, order, hashtags) {\n    var compare;\n    if (criterion === 'alpha') {\n      compare = function(h1, h2) {\n        if (order === 0) {\n          return h1.data.id.localeCompare(h2.data.id);\n        } else {\n          return h2.data.id.localeCompare(h1.data.id);\n        }\n      };\n    } else {\n      compare = function(h1, h2) {\n        if (order === 0) {\n          return h1.data.weight - h2.data.weight;\n        } else {\n          return h2.data.weight - h1.data.weight;\n        }\n      };\n    }\n\n    hashtags.sort(compare);\n    return hashtags;\n  }\n\n  function buttonSortAction(criterion, dom) {\n    if (G_DATAGRAPH === undefined) {\n      return false;\n    }\n\n    var nodesCpy = G_DATAGRAPH.nodes.slice();\n    if (dom.hasClass('btn-order-1')) {\n      nodesCpy = sortHashtags(criterion, 0, nodesCpy);\n      dom.removeClass('btn-order-1').addClass('btn-order-0');\n    } else {\n      nodesCpy = sortHashtags(criterion, 1, nodesCpy);\n      dom.removeClass('btn-order-0').addClass('btn-order-1');\n    }\n\n    displayHashtagList(nodesCpy);\n  }\n\n});\n//# sourceMappingURL=script.js.map\n"]}